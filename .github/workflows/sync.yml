name: RSS to OneNote Sync

on:
  schedule:
    - cron: '0 * * * *' # 每小时
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 运行前：解密上次保存的状态（如果存在）
      - name: Decrypt state (if present)
        shell: bash
        run: |
          set -e
          if [ -f token_cache.bin.enc ]; then
            openssl enc -aes-256-cbc -d -pbkdf2 -in token_cache.bin.enc -out token_cache.bin -pass pass:"${{ secrets.STATE_KEY }}"
            echo "Decrypted token_cache.bin"
          fi
          if [ -f processed_items.txt.enc ]; then
            openssl enc -aes-256-cbc -d -pbkdf2 -in processed_items.txt.enc -out processed_items.txt -pass pass:"${{ secrets.STATE_KEY }}"
            echo "Decrypted processed_items.txt"
          fi

      - name: Run Python Script to Sync RSS
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ONENOTE_SECTION_NAME: ${{ secrets.ONENOTE_SECTION_NAME }}
          CI: true
        run: python -u rss_to_onenote.py

      # 运行后：把状态重新加密，然后删除明文
      - name: Encrypt state
        if: always()
        shell: bash
        run: |
          set -e
          if [ -f token_cache.bin ]; then
            openssl enc -aes-256-cbc -salt -pbkdf2 -in token_cache.bin -out token_cache.bin.enc -pass pass:"${{ secrets.STATE_KEY }}"
            shred -u token_cache.bin || rm -f token_cache.bin
          fi
          if [ -f processed_items.txt ]; then
            openssl enc -aes-256-cbc -salt -pbkdf2 -in processed_items.txt -out processed_items.txt.enc -pass pass:"${{ secrets.STATE_KEY }}"
            shred -u processed_items.txt || rm -f processed_items.txt
          fi

      - name: Commit and Push Encrypted State Files
        if: always()
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add token_cache.bin.enc processed_items.txt.enc || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update encrypted state files"
            git push
          fi
