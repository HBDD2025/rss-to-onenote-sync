name: sync

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"   # 每小时跑一次，你可以改成自己想要的频率

concurrency:
  group: rss-to-onenote-state
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Decrypt state files (if any)
        run: |
          if [ -f token_cache.enc ]; then
            openssl enc -d -aes-256-cbc -pbkdf2 -in token_cache.enc -out token_cache.bin -k "${{ secrets.STATE_KEY }}"
          fi
          if [ -f processed_items.enc ]; then
            openssl enc -d -aes-256-cbc -pbkdf2 -in processed_items.enc -out processed_items.txt -k "${{ secrets.STATE_KEY }}"
          fi

      - name: Sanity check token cache
        run: |
          if [ -f token_cache.enc ]; then
            echo "[check] token_cache.enc size:" $(wc -c < token_cache.enc)
          else
            echo "[check] token_cache.enc NOT found"
          fi

          if [ -f token_cache.bin ]; then
            echo "[check] token_cache.bin size:" $(wc -c < token_cache.bin)
            python - <<'PY'
import msal
from msal_extensions import FilePersistence, PersistedTokenCache
p = FilePersistence("token_cache.bin")
cache = PersistedTokenCache(p); cache.reload()
app = msal.PublicClientApplication("dummy", token_cache=cache, authority="https://login.microsoftonline.com/consumers")
accts = app.get_accounts()
print("[check] accounts in cache:", [a.get("username") for a in accts])
print("[check] raw_cache_size:", len(cache.serialize()))
PY
          else
            echo "[check] token_cache.bin NOT found after decrypt"
          fi
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run sync
        run: python -u rss_to_onenote.py
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ONENOTE_SECTION_NAME: ${{ secrets.ONENOTE_SECTION_NAME }}

      - name: Encrypt state files
        run: |
          if [ -f token_cache.bin ]; then
            openssl enc -aes-256-cbc -pbkdf2 -in token_cache.bin -out token_cache.enc -k "${{ secrets.STATE_KEY }}"
          fi
          if [ -f processed_items.txt ]; then
            openssl enc -aes-256-cbc -pbkdf2 -in processed_items.txt -out processed_items.enc -k "${{ secrets.STATE_KEY }}"
          fi

      - name: Commit and Push encrypted state
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add token_cache.enc processed_items.enc || true
          git commit -m "Update encrypted state files" || exit 0
          git pull --rebase
          git push
