name: RSS to OneNote Sync

on:
  schedule:
    - cron: '0 * * * *'   # 每小时第 0 分运行
  workflow_dispatch:

# 防并发：同名工作流只保留最后一次
concurrency:
  group: rss-to-onenote-sync
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # 为 rebase 提供完整历史

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 解密历史状态文件（若存在）
      - name: Decrypt state files (if present)
        env:
          STATE_KEY: ${{ secrets.STATE_KEY }}
        shell: bash
        run: |
          set -e
          if [ -f token_cache.enc ]; then
            openssl enc -d -aes-256-cbc -pbkdf2 -in token_cache.enc -out token_cache.bin -pass pass:"$STATE_KEY" || true
          fi
          if [ -f processed_items.enc ]; then
            openssl enc -d -aes-256-cbc -pbkdf2 -in processed_items.enc -out processed_items.txt -pass pass:"$STATE_KEY" || true
          fi

      - name: Run Python Script to Sync RSS
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ONENOTE_SECTION_NAME: ${{ secrets.ONENOTE_SECTION_NAME }}
          SECTION_MONTHLY: "true"    # 开启“按月自动分区”：<基础分区名> · YYYY-MM
          CI: true
        run: python -u rss_to_onenote.py

      - name: Encrypt state files
        env:
          STATE_KEY: ${{ secrets.STATE_KEY }}
        shell: bash
        run: |
          set -e
          if [ -f token_cache.bin ]; then
            openssl enc -aes-256-cbc -pbkdf2 -salt -in token_cache.bin -out token_cache.enc -pass pass:"$STATE_KEY"
            rm -f token_cache.bin
          fi
          if [ -f processed_items.txt ]; then
            openssl enc -aes-256-cbc -pbkdf2 -salt -in processed_items.txt -out processed_items.enc -pass pass:"$STATE_KEY"
            rm -f processed_items.txt
          fi

      - name: Commit and Push encrypted state
        shell: bash
        run: |
          set -e
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add token_cache.enc processed_items.enc || true
          git commit -m "Update encrypted state files" || echo "No changes to commit."

          # 关键：推送前先拉取并 rebase，解决“fetch first”
          git fetch origin main
          git pull --rebase --autostash origin main || true

          # 推回 main
          git push origin HEAD:main
